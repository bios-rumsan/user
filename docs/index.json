[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "lib/account.js",
    "content": "const fs = require('fs');\r\nconst {coroutine} = require('bluebird');\r\nconst {Promise} = require('bluebird');\r\nconst _ = require('lodash');\r\n\r\nconst models = require('./models');\r\nconst utils = require('./utils');\r\n\r\nconst tokenExpiration = 24 * 7 * 1000 * 60 * 60;\r\nconst tokenExpireBalancer = 3 * 1000;\r\n\r\nmodule.exports = ({mongoose, mailer, app_secret, options}) => {\r\n    class Account{\r\n        constructor(){}\r\n        \r\n        isResetTokenValid(resetToken) {\r\n            return new Promise((resolve, reject) => {\r\n                this.userStore.findOne({\r\n                    resetToken\r\n                }, function(err, item) {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    resolve(!!item && item.resetTokenExpires >= Date.now());\r\n                });\r\n            })\r\n        }\r\n\r\n        generateResetToken(username) {\r\n            return this.userExists(username)\r\n                .then((data) => {\r\n                    if (!data) {\r\n                        return {\r\n                            error: 'User not found'\r\n                        }\r\n                    } else {\r\n                        return generateRandomToken().then((token) => {\r\n                            return new Promise((resolve, reject) => {\r\n                                this.userStore.findOneAndUpdate({\r\n                                        username\r\n                                    }, {\r\n                                        $set: {\r\n                                            resetToken: token.toString('base64').replace(/\\//g, ''),\r\n                                            resetTokenExpires: Date.now() + resetTokenExpiration\r\n                                        }\r\n                                    }, {\r\n                                        new: true\r\n                                    },\r\n                                    (err, user) => {\r\n                                        if (err) reject(err);\r\n\r\n                                        this.sendMessage(username, {\r\n                                            token: token.toString('base64').replace(/\\//g, '')\r\n                                        }, 'forgot');\r\n                                        resolve(true);\r\n                                    })\r\n                            })\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n\r\n        resetPasswordByToken(resetToken, password) {\r\n            return saltAndHash(password).then((results) => {\r\n                return new Promise((resolve, reject) => {\r\n                    this.userStore.findOneAndUpdate({\r\n                            resetToken\r\n                        }, {\r\n                            $set: {\r\n                                password: results.hash.toString('base64'),\r\n                                passwordSalt: results.salt.toString('base64'),\r\n                            },\r\n                        },\r\n                        function(err, item) {\r\n                            if (err) {\r\n                                reject(err);\r\n                            }\r\n\r\n                            resolve(true);\r\n                        });\r\n                })\r\n            })\r\n        }\r\n\r\n        changePasswordByToken(token, newPassword) {\r\n            return saltAndHash(newPassword).then((results) => {\r\n                return new Promise((resolve, reject) => {\r\n                    this.userStore.findOneAndUpdate({\r\n                            token\r\n                        }, {\r\n                            $set: {\r\n                                password: results.hash.toString('base64'),\r\n                                passwordSalt: results.salt.toString('base64'),\r\n                            },\r\n                        },\r\n                        function(err, item) {\r\n                            if (err) {\r\n                                reject(err);\r\n                            }\r\n                            resolve(true);\r\n                        });\r\n                })\r\n            })\r\n        }\r\n\r\n        resetPassword(_id, newPassword) {\r\n            return saltAndHash(newPassword).then((results) => {\r\n                return new Promise((resolve, reject) => {\r\n                    this.userStore.findOneAndUpdate({\r\n                            _id\r\n                        }, {\r\n                            $set: {\r\n                                password: results.hash.toString('base64'),\r\n                                passwordSalt: results.salt.toString('base64'),\r\n                            },\r\n                        },\r\n                        function(err, item) {\r\n                            if (err) {\r\n                                reject(err);\r\n                            }\r\n\r\n                            const data = Object.assign({}, item._doc);\r\n                            data.extras.rawPassword = newPassword;\r\n                            // setup email data with unicode symbols\r\n                            let mailOptions = Object.assign(\r\n                                mailer.options.updatePassword, {\r\n                                    data,\r\n                                    to: item.username\r\n                                }\r\n                            );\r\n\r\n                            this.sendMessage(item.username, data, 'updatePassword');\r\n                            resolve(item);\r\n                        });\r\n                })\r\n            })\r\n        }\r\n\r\n        changePassword(_id, newPassword) {\r\n            return saltAndHash(newPassword).then((results) => {\r\n                return new Promise((resolve, reject) => {\r\n                    this.userStore.findOneAndUpdate({\r\n                            _id\r\n                        }, {\r\n                            $set: {\r\n                                password: results.hash.toString('base64'),\r\n                                passwordSalt: results.salt.toString('base64'),\r\n                            },\r\n                        },\r\n                        function(err, item) {\r\n                            if (err) {\r\n                                reject(err);\r\n                            }\r\n                            resolve(item);\r\n                        });\r\n                })\r\n            })\r\n        }\r\n\r\n        requestVerification(userId) {\r\n            return new Promise((resolve, reject) => {\r\n                const verificationToken = Math.random().toString(36).substring(7);\r\n                return this.userStore.findOneAndUpdate({\r\n                    _id: userId\r\n                }, {\r\n                    $set: {\r\n                        verificationToken,\r\n                        verificationExpires: Date.now() + tokenExpiration\r\n                    }\r\n                }, {\r\n                    new: true\r\n                }, (err, user) => {\r\n                    if (err) reject(err);\r\n                    this.sendMessage(user.username, {\r\n                        verificationToken\r\n                    }, 'verify');\r\n                    resolve(true);\r\n                })\r\n            })\r\n        }\r\n\r\n        verifyAccount(verificationToken) {\r\n            return new Promise((resolve, reject) => {\r\n                this.userStore.findOne({\r\n                    verificationToken\r\n                }, function(err, item) {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    if (!!item && item.verificationExpires >= Date.now()) {\r\n                        return this.userStore.findOneAndUpdate({\r\n                            verificationToken\r\n                        }, {\r\n                            $set: {\r\n                                verified: true,\r\n                                verificationToken: null,\r\n                                verificationExpires: null\r\n                            }\r\n                        }, function(err) {\r\n                            if (err) {\r\n                                reject(err);\r\n                            }\r\n                            resolve(true);\r\n                        });\r\n                    } else {\r\n                        resolve(false);\r\n                    }\r\n                });\r\n            })\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/account.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "tokenExpiration",
    "memberof": "lib/account.js",
    "static": true,
    "longname": "lib/account.js~tokenExpiration",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/account.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "tokenExpireBalancer",
    "memberof": "lib/account.js",
    "static": true,
    "longname": "lib/account.js~tokenExpireBalancer",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/account.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "account",
    "memberof": "lib/account.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/account.js~account",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/account.js",
    "importStyle": "account",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"mongoose\": *, \"mailer\": *, \"app_secret\": *, \"options\": *}"
        ],
        "defaultRaw": {
          "mongoose": null,
          "mailer": null,
          "app_secret": null,
          "options": null
        },
        "defaultValue": "{\"mongoose\":null,\"mailer\":null,\"app_secret\":null,\"options\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "lib/index.js",
    "content": "const Role = require('./role');\r\nconst User = require('./user');\r\nconst Schema = require('./models');\r\nconst Utils = require('./utils');\r\n\r\n\r\nmodule.exports = {\r\n    Role, User, Schema, Utils\r\n}",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "lib/models.js",
    "content": "const Schema = function(mongoose){\r\n    const UserSchema = mongoose.Schema({\r\n        name: {\r\n            first: {type:String, required: true},\r\n            initials: String,\r\n            last: {type:String, required: true},\r\n            salutation: String,\r\n            suffix: String\r\n        },\r\n        password: mongoose.Schema.Types.Mixed,\r\n        is_active : {type: Boolean, required:true, default:true},\r\n        extras: mongoose.Schema.Types.Mixed,\r\n        token: String,\r\n        created_on: {type: Date, required: true, default: Date.now}\r\n    }, {\r\n        collection: 'users',\r\n        toObject: {virtuals: true},\r\n        toJSON: {virtuals: true}\r\n    });\r\n\r\n    UserSchema.virtual('name.full')\r\n    .get(function () {\r\n        if(this.name.initials)\r\n            return this.name.first + ' ' + this.name.initials + ' ' + this.name.last;\r\n        else\r\n            return this.name.first + ' ' + this.name.last;\r\n        });\r\n\r\n    UserSchema.virtual('comms');\r\n    const User = mongoose.model('User', UserSchema);\r\n\r\n    const CommSchema = mongoose.Schema({\r\n        user_id: {type: mongoose.Schema.Types.ObjectId, required: true, ref: 'User'},\r\n        type: {type:String, required: true},\r\n        address: {type: String, required: true},\r\n        token: String,\r\n        token_expiration: Number,\r\n        is_verified: {type:Boolean, required: true, default: false},\r\n        verified_on: Date,\r\n        created_on: {type: Date, required: true, default: Date.now}\r\n    }, {collection: 'users_comm'})\r\n    CommSchema.index({user_id: 1, address:1}, {unique: true});\r\n    const Comm = mongoose.model('Comm', CommSchema);\r\n\r\n    const AuthSchema = mongoose.Schema({\r\n        user_id: {type: mongoose.Schema.Types.ObjectId, required: true, ref: 'User'},\r\n        type: {type:String, required: true},\r\n        username: {type: String, required: true},\r\n        false_attempts: {type: Number, required: true, default: 0},\r\n        is_locked: {type: Boolean, required: true, default: false},\r\n        locked_on: {type: Date},\r\n        is_active: {type:Boolean, required: true, default: true},\r\n        created_on: {type: Date, required: true, default: Date.now}\r\n    }, {collection: 'users_auth'})\r\n    AuthSchema.index({username:1}, {unique: true});\r\n    const Auth = mongoose.model('Auth', AuthSchema);\r\n\r\n    const AuthLogSchema = mongoose.Schema({\r\n        user_id: {type: mongoose.Schema.Types.ObjectId, required: true, ref: 'User'},\r\n        auth_id: {type: mongoose.Schema.Types.ObjectId, required: true, ref: 'Auth'},\r\n        ip_address: String,\r\n        is_success: Boolean,\r\n        created_on: {type: Date, required: true, default: Date.now}\r\n    }, {collection: 'auth_logs'})\r\n    const AuthLog = mongoose.model('AuthLog', AuthLogSchema);\r\n\r\n    return {\r\n        Auth,\r\n        AuthSchema,\r\n        Comm,\r\n        CommSchema,\r\n        User,\r\n        UserSchema,\r\n        AuthLog,\r\n        AuthLogSchema\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Schema",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/models.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "Schema",
    "memberof": "lib/models.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/models.js~Schema",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/models.js",
    "importStyle": "Schema",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "mongoose",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"Auth\": *, \"AuthSchema\": *, \"Comm\": *, \"CommSchema\": *, \"User\": *, \"UserSchema\": *, \"AuthLog\": *, \"AuthLogSchema\": *}"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "lib/role.js",
    "content": "",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/role.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "lib/user.js",
    "content": "/** @const */\r\nconst _ = require('lodash');\r\n/** @const */\r\nconst fs = require('fs');\r\n/** @const */\r\nconst {coroutine} = require('bluebird');\r\n/** @const */\r\nconst {Promise} = require('bluebird');\r\n/** @const */\r\nconst handlebars = require('handlebars');\r\n/** @const */\r\nconst models = require('./models');\r\n/** @const */\r\nconst utils = require('./utils');\r\n/** @const */\r\nconst {Secure, NameParser} = require('./utils');\r\n/** @const */\r\nconst tokenExpiration = 24 * 7 * 1000 * 60 * 60;\r\n/** @const */\r\nconst tokenExpireBalancer = 3 * 1000;\r\n\r\nvar TokenUtil, AuthModel, CommModel, \r\n    UserModel, Mongoose, Mailer;\r\n\r\nconst stringToObjectId = (id) => {\r\n    return Mongoose.Types.ObjectId(id);\r\n}\r\n\r\nconst addCommsWithoutUserIdCheck = (user_id, comms) => {\r\n    if(!Array.isArray(comms))\r\n        comms = [comms];\r\n    \r\n    let arrComm = _.cloneDeep(comms);\r\n    let promises = []\r\n\r\n    _.each(arrComm, (comm)=>{\r\n        comm.user_id = stringToObjectId(user_id);\r\n        comm.token = Math.floor(100000 + Math.random() * 900000);\r\n        comm.token_expiration = Date.now() + tokenExpiration - tokenExpireBalancer;\r\n\r\n        promises.push(\r\n            new Promise((resolve)=>{\r\n                CommModel.findOne({user_id: stringToObjectId(user_id), address:comm.address}, (err, result) => {\r\n                    if(!err){\r\n                        if(!result){\r\n                            let record = new CommModel(comm);\r\n                            record.save(function(err, d){\r\n                                resolve(d);\r\n                            });\r\n                        } else {\r\n                            resolve(null)\r\n                        }\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                })\r\n            }\r\n        ))\r\n    })\r\n    \r\n    return Promise.all(promises);\r\n};\r\n\r\n\r\nclass User {\r\n    /**\r\n        * @mongoose {object} Send reference to mongoose from your application.\r\n        * @mailer {object} Send reference to fully configured nodemailer reference.\r\n        * @app_secret {string} Your application secret. Must be 12 characters\r\n        * @options {object} These are the valid options\r\n        * @return {number} result of the sum value.\r\n    */\r\n    constructor({mongoose, mailer, app_secret, options}) {\r\n    if (!mongoose)\r\n        throw 'Mongoose is undefined';\r\n    if (!mailer)\r\n        throw 'Mailer is undefined.';\r\n    if(!app_secret)\r\n        throw 'App Secret is undefined.';\r\n    if(app_secret.length!=32)\r\n        throw 'App Secret must be 32 characters.';\r\n\r\n        //Private variables\r\n        let m = models(mongoose);\r\n        AuthModel = m.Auth;\r\n        CommModel = m.Comm;\r\n        UserModel = m.User;\r\n        TokenUtil = new utils.Token({app_secret});\r\n        Mongoose = mongoose;\r\n\r\n        this.options = options || {};\r\n        this.options.jwt_duration = this.options.jwt_duration || 1000 * 60 * 20;\r\n        this.mailer = mailer;\r\n\r\n        \r\n    }\r\n\r\n    validateToken (token) {\r\n        return TokenUtil.validate(token);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} to - receiver email address\r\n     * @param {object} data - data to be replaced in the template\r\n     * @param {string} template - html template\r\n     * @return {Boolean} success\r\n     */\r\n    sendMessage(to, data, template) {\r\n        if(Mailer.disabled){\r\n            console.log('Mailer is disabled');\r\n            return;\r\n        }\r\n        \r\n        const mailOptions = Object.assign({},\r\n            Mailer.options[template], {\r\n                data,\r\n                to\r\n            }\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fs.readFile(mailOptions.html, {\r\n                encoding: 'utf-8'\r\n            }, function(err, html) {\r\n                if (err) reject(err);\r\n                var template = handlebars.compile(html);\r\n                var htmlToSend = template(data);\r\n                mailOptions.html = htmlToSend;\r\n\r\n                if (data.subject) {\r\n                    mailOptions.subject = data.subject;\r\n                }\r\n\r\n                Mailer.transporter.sendMail(mailOptions);\r\n                resolve(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    addAuth({user_id, username, type}) {\r\n        return new Promise((resolve, reject) => {\r\n            AuthModel.findOne({username}, (err,res) => {\r\n                if(err) reject(err);\r\n                if(res) reject('Auth already exists');\r\n                let record = new AuthModel({\r\n                    user_id: stringToObjectId(user_id),\r\n                    username, type\r\n                })\r\n                record.save((err,res) => {\r\n                    if(err) reject(err);\r\n                    resolve(res);\r\n                });\r\n            })\r\n        })\r\n    }\r\n\r\n    addComms(user_id, comms){\r\n        return new Promise((resolve, reject)=>{\r\n            UserModel.findOne({_id: user_id, is_active:true})\r\n            .then(data=>{\r\n                if(data){\r\n                    addCommsWithoutUserIdCheck(user_id, comms)\r\n                    .then(comms=>resolve(comms))\r\n                    .catch(err => reject(err))\r\n                } else {\r\n                    reject('User does not exists')\r\n                }\r\n            })\r\n            .catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    authenticate({username,password},options={}) {\r\n        /*\r\n            Options:\r\n                TokenvalidFor (Number): Duration JWT Token valid for.\r\n            */\r\n        if (!username || !password) {\r\n            throw new Error('Username and password required');\r\n        }\r\n\r\n        let jwt_duration = this.options.jwt_duration;\r\n        if(options.jwt_duration)\r\n            jwt_duration = options.TokenvalidFor;\r\n\r\n        return new Promise((resolve, reject)=>{\r\n            this.getByUsername(username, {returnPwd:true})\r\n            .then((user)=>\r\n                Secure.hash(password, Buffer.from(user.password.salt, 'base64'))\r\n                .then((hashedPwd)=>{\r\n                    if (user.password.hash !== hashedPwd.hash.toString('base64')) \r\n                        reject('Invalid username or password');\r\n                    user.password = undefined;\r\n                    user.token = TokenUtil.generate({user_id: user.id}, jwt_duration);\r\n                    resolve(user);\r\n                })\r\n            )\r\n            .catch((err)=>{\r\n                reject(err);\r\n            })\r\n        })\r\n    };\r\n\r\n    authExists({username}) {\r\n        return new Promise((resolve, reject) => {\r\n            AuthModel.findOne({username}, (err,res) => {\r\n                if(err) reject(err);\r\n                if(res) resolve(true);\r\n                else resolve(false);\r\n            })\r\n        })\r\n    };\r\n\r\n    create(payload, options={}) {\r\n        var me = this;\r\n        /*\r\n        payload: User object. Must send either email or phone.\r\n            extras (object): Store non-standard attributes with the user object.\r\n        options:\r\n            comms_verified (Boolean): Flag is_verified to true in comms record\r\n        */\r\n        if(typeof payload.name=='string')\r\n            payload.name = NameParser.parse(payload.name)\r\n        \r\n        payload.auth = payload.auth || {};\r\n        if(!payload.auth.username)\r\n            throw new Error('Must send auth information');\r\n\r\n        payload.password = payload.password || (Math.floor(100000 + Math.random() * 900000)).toString();\r\n    \r\n        var comms = payload.comms || [];\r\n        if(payload.email){\r\n            comms.push({\r\n                type: 'email',\r\n                address: payload.email,\r\n                is_verified: options.comms_verified || false\r\n            })\r\n        }\r\n        if(payload.phone){\r\n            comms.push({\r\n                type: 'phone',\r\n                address: payload.phone,\r\n                is_verified: options.comms_verified || false\r\n            })\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {   \r\n            me.authExists(payload.auth)\r\n            .then((exists)=>{if (exists) throw new Error('Username already exists')})\r\n            .then(()=>Secure.saltAndHash(payload.password))\r\n            .then((pwdHash) => {\r\n                const user_record = new UserModel({\r\n                    name: payload.name,\r\n                    password: {\r\n                        hash: pwdHash.hash.toString('base64'),\r\n                        salt: pwdHash.salt.toString('base64')\r\n                    },\r\n                    extras: payload.extras\r\n                })\r\n                user_record.save()\r\n                .then(user => me.addAuth(Object.assign({}, payload.auth, {user_id: user_record._id})))\r\n                .then(auth => me.addComms(user_record._id, comms))\r\n                .then(()=> me.getById(user_record._id))\r\n                .then(user => resolve(user))\r\n                .catch(err=> {\r\n                    UserModel.findOneAndDelete({_id:user_record._id}).exec();\r\n                    AuthModel.deleteMany({user_id:user_record._id}).exec();\r\n                    CommModel.deleteMany({user_id:user_record._id}).exec();\r\n                    reject(err)\r\n                })\r\n            })\r\n            .catch(err=>reject(err))\r\n            \r\n        });\r\n    };\r\n\r\n    createUsingEmail(payload, options={}) {\r\n        /*\r\n        Options:\r\n            notify (Boolean): Send notifications through email.\r\n        */\r\n       if(!payload.email)\r\n            throw new Error('Email is required');\r\n\r\n        payload.auth = {username: payload.email, type:'email'}\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.create(payload,options)\r\n            .then((user) => {\r\n                if(options.notify){\r\n                    const emailData = Object.assign({rawPassword: payload.password}, user);\r\n                    this.sendMessage(payload.email, emailData, 'signup');\r\n                }\r\n\r\n                resolve(user);\r\n            })\r\n            .catch(err => reject(err))\r\n        });\r\n    };\r\n\r\n    createUsingPhone(payload, options={}) {\r\n        /*\r\n            notify (Boolean): Send notifications through phone.\r\n        */\r\n       if(!payload.phone)\r\n            throw new Error('Phone number is required');\r\n\r\n        payload.auth = {username: payload.phone, type:'phone'}\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.create(payload,options)\r\n            .then((user) => {\r\n                if(options.notify){\r\n                    //ToDo: code for sending phone confirmation\r\n                }\r\n\r\n                resolve(user);\r\n            })\r\n            .catch(err => reject(err))\r\n        });\r\n    }\r\n\r\n    getById(user_id, options = {}) {\r\n        /*\r\n        Options:\r\n            returnPwd (Boolean): Return password hash or not.\r\n        */\r\n        let showFields = {password: 0}\r\n        if(options.returnPwd)\r\n            showFields = {};\r\n        options.returnPwd = options.returnPwd || false;\r\n        return new Promise((resolve,reject)=>{\r\n            UserModel.findOne({_id: user_id, is_active:true}, showFields, (err, user)=>{\r\n                if(err) reject(err);\r\n                if(user){\r\n                    CommModel.find({user_id},(err, comms) => {\r\n                        if(err) reject(err);\r\n                        user.comms = comms\r\n                        resolve(user);\r\n                    })\r\n                } else {\r\n                    resolve(null);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    getByUsername(address, options) {\r\n        /*\r\n        Options:\r\n            returnPwd (Boolean): Return password hash or not.\r\n        */\r\n        return new Promise((resolve, reject) => {\r\n            CommModel.findOne({address}, (err, comm) => {\r\n                if (err) reject(err);\r\n                if(comm){\r\n                    this.getById(comm.user_id, options)\r\n                    .then(data => resolve(data))\r\n                    .error((err) => reject(err));\r\n                }\r\n                else\r\n                    reject('Username does not exists');\r\n            });\r\n        });\r\n    };\r\n    \r\n    getMe(token) {\r\n        return new Promise((resolve, reject) => {\r\n            TokenUtil.validate(token)\r\n            .then(token_data=>this.getById(token_data.data.user_id))           \r\n            .then(data => resolve(data))\r\n            .catch(err => reject(err));\r\n        });\r\n    };     \r\n}\r\n\r\nmodule.exports = User",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/user.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "tokenExpiration",
    "memberof": "lib/user.js",
    "static": true,
    "longname": "lib/user.js~tokenExpiration",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "tokenExpireBalancer",
    "memberof": "lib/user.js",
    "static": true,
    "longname": "lib/user.js~tokenExpireBalancer",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@const",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "stringToObjectId",
    "memberof": "lib/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/user.js~stringToObjectId",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "addCommsWithoutUserIdCheck",
    "memberof": "lib/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/user.js~addCommsWithoutUserIdCheck",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "user_id",
        "types": [
          "*"
        ]
      },
      {
        "name": "comms",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "User",
    "memberof": "lib/user.js",
    "static": true,
    "longname": "lib/user.js~User",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/user.js",
    "importStyle": "User",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@mongoose",
        "tagValue": "{object} Send reference to mongoose from your application."
      },
      {
        "tagName": "@mailer",
        "tagValue": "{object} Send reference to fully configured nodemailer reference."
      },
      {
        "tagName": "@app_secret",
        "tagValue": "{string} Your application secret. Must be 12 characters"
      },
      {
        "tagName": "@options",
        "tagValue": "{object} These are the valid options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "result of the sum value."
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "options",
    "memberof": "lib/user.js~User",
    "static": false,
    "longname": "lib/user.js~User#options",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "mailer",
    "memberof": "lib/user.js~User",
    "static": false,
    "longname": "lib/user.js~User#mailer",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "validateToken",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#validateToken",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "sendMessage",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#sendMessage",
    "access": "public",
    "description": "",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": "receiver email address"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "data to be replaced in the template"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "template",
        "description": "html template"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "success"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "addAuth",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#addAuth",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user_id\": *, \"username\": *, \"type\": *}"
        ],
        "defaultRaw": {
          "user_id": null,
          "username": null,
          "type": null
        },
        "defaultValue": "{\"user_id\":null,\"username\":null,\"type\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "addComms",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#addComms",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [
      {
        "name": "user_id",
        "types": [
          "*"
        ]
      },
      {
        "name": "comms",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "authenticate",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#authenticate",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"username\": *, \"password\": *}"
        ],
        "defaultRaw": {
          "username": null,
          "password": null
        },
        "defaultValue": "{\"username\":null,\"password\":null}"
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "authExists",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#authExists",
    "access": "public",
    "description": null,
    "lineNumber": 205,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"username\": *}"
        ],
        "defaultRaw": {
          "username": null
        },
        "defaultValue": "{\"username\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "create",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#create",
    "access": "public",
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "createUsingEmail",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#createUsingEmail",
    "access": "public",
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "createUsingPhone",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#createUsingPhone",
    "access": "public",
    "description": null,
    "lineNumber": 302,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "getById",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#getById",
    "access": "public",
    "description": null,
    "lineNumber": 324,
    "undocument": true,
    "params": [
      {
        "name": "user_id",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getByUsername",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#getByUsername",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "params": [
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getMe",
    "memberof": "lib/user.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/user.js~User#getMe",
    "access": "public",
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "lib/utils/index.js",
    "content": "const Secure = require('./secure');\r\nconst Token = require('./token');\r\nconst NameParser = require('./NameParser');\r\n\r\nmodule.exports = { Secure, Token,NameParser };\r\n\r\n/*\r\n= coroutine(function*(){\r\n    \r\n})\r\n\r\nnew Promise((resolve,reject)=>{\r\n\r\n}) \r\n\r\n(err, d) => {\r\n\r\n}\r\n*/",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "lib/utils/nameParser.js",
    "content": "// based on PHP Name Parser by Josh Fraser (joshfraser.com)\r\n// http://www.onlineaspect.com/2009/08/17/splitting-names/\r\n// ported to JavaScript by Mark Pemburn (pemburnia.com)\r\n// released under Apache 2.0 license\r\n\r\nvar NameParser = (function(){\r\n    function NameParse() {\r\n        return NameParse;\r\n    }\r\n\r\n    // split full names into the following parts:\r\n    // - prefix / salutation  (Mr., Mrs., etc)\r\n    // - given name / first name\r\n    // - middle initials\r\n    // - surname / last name\r\n    // - suffix (II, Phd, Jr, etc)\r\n    NameParse.parse = function (fullast_name) {\r\n        fullast_name = fullast_name.trim();\r\n\r\n        var nameParts = [];\r\n        var last_name = \"\";\r\n        var first_name = \"\";\r\n        var initials = \"\";\r\n        var word = null;\r\n        var j = 0;\r\n        var i = 0;\r\n\r\n        // split into words\r\n        // completely ignore any words in parentheses\r\n        nameParts = fullast_name.split(\" \").filter(function(namePart){\r\n            return (namePart.indexOf(\"(\") === -1);\r\n        });\r\n\r\n        var numWords = nameParts.length;\r\n        // is the first word a title? (Mr. Mrs, etc)\r\n        var salutation = this.is_salutation(nameParts[0]);\r\n        var suffix = this.is_suffix(nameParts[numWords - 1]);\r\n        // set the range for the middle part of the name (trim prefixes & suffixes)\r\n        var start = (salutation) ? 1 : 0;\r\n        var end = (suffix) ? numWords - 1 : numWords;\r\n\r\n        word = nameParts[start];\r\n        // if we start off with an initial, we'll call it the first name\r\n        if (this.is_initial(word)) {\r\n            // if so, do a look-ahead to see if they go by their middle name\r\n            // for ex: \"R. Jason Smith\" => \"Jason Smith\" & \"R.\" is stored as an initial\r\n            // but \"R. J. Smith\" => \"R. Smith\" and \"J.\" is stored as an initial\r\n            if (this.is_initial(nameParts[start + 1])) {\r\n                first_name += \" \" + word.toUpperCase();\r\n            } else {\r\n                initials += \" \" + word.toUpperCase();\r\n            }\r\n        } else {\r\n            first_name += \" \" + this.fix_case(word);\r\n        }\r\n\r\n        // concat the first name\r\n        for (i=start + 1; i<(end - 1); i++) {\r\n            word = nameParts[i];\r\n            // move on to parsing the last name if we find an indicator of a compound last name (Von, Van, etc)\r\n            // we do not check earlier to allow for rare cases where an indicator is actually the first name (like \"Von Fabella\")\r\n            if (this.is_compound_last_name(word)) {\r\n                break;\r\n            }\r\n\r\n            if (this.is_initial(word)) {\r\n                initials += \" \" + word.toUpperCase();\r\n            } else {\r\n                first_name += \" \" + this.fix_case(word);\r\n            }\r\n        }\r\n\r\n        // check that we have more than 1 word in our string\r\n        if ((end - start) > 1) {\r\n            // concat the last name\r\n            for (j=i; j<end; j++) {\r\n                last_name += \" \" + this.fix_case(nameParts[j]);\r\n            }\r\n        }\r\n\r\n        // return the various parts in an array\r\n        return {\r\n            \"salutation\": salutation || \"\",\r\n            \"first\": first_name.trim(),\r\n            \"initials\": initials.trim(),\r\n            \"last\": last_name.trim(),\r\n            \"suffix\": suffix || \"\"\r\n        };\r\n    };\r\n\r\n    NameParse.removeIgnoredChars = function (word) {\r\n        //ignore periods\r\n        return word.replace(\".\",\"\");\r\n    };\r\n\r\n    // detect and format standard salutations\r\n    // I'm only considering english honorifics for now & not words like\r\n    NameParse.is_salutation = function (word) {\r\n        word = this.removeIgnoredChars(word).toLowerCase();\r\n        // returns normalized values\r\n        if (word === \"mr\" || word === \"master\" || word === \"mister\") {\r\n            return \"Mr.\";\r\n        } else if (word === \"mrs\") {\r\n            return \"Mrs.\";\r\n        } else if (word === \"miss\" || word === \"ms\") {\r\n            return \"Ms.\";\r\n        } else if (word === \"dr\") {\r\n            return \"Dr.\";\r\n        } else if (word === \"rev\") {\r\n            return \"Rev.\";\r\n        } else if (word === \"fr\") {\r\n            return \"Fr.\";\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    //  detect and format common suffixes\r\n    NameParse.is_suffix = function (word) {\r\n        word = this.removeIgnoredChars(word).toLowerCase();\r\n        // these are some common suffixes - what am I missing?\r\n        var suffixArray = [\r\n            'I','II','III','IV','V','Senior','Junior','Jr','Sr','PhD','APR','RPh','PE','MD','MA','DMD','CME',\r\n            \"BVM\",\"CFRE\",\"CLU\",\"CPA\",\"CSC\",\"CSJ\",\"DC\",\"DD\",\"DDS\",\"DO\",\"DVM\",\"EdD\",\"Esq\",\r\n            \"JD\",\"LLD\",\"OD\",\"OSB\",\"PC\",\"Ret\",\"RGS\",\"RN\",\"RNC\",\"SHCJ\",\"SJ\",\"SNJM\",\"SSMO\",\r\n            \"USA\",\"USAF\",\"USAFR\",\"USAR\",\"USCG\",\"USMC\",\"USMCR\",\"USN\",\"USNR\"\r\n        ];\r\n\r\n        var suffixIndex = suffixArray.map(function(suffix){\r\n            return suffix.toLowerCase();\r\n        }).indexOf(word);\r\n\r\n        if(suffixIndex >= 0) {\r\n            return suffixArray[suffixIndex];\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // detect compound last names like \"Von Fange\"\r\n    NameParse.is_compound_last_name = function (word) {\r\n        word = word.toLowerCase();\r\n        // these are some common prefixes that identify a compound last names - what am I missing?\r\n        var words = ['vere','von','van','de','del','della','di','da','pietro','vanden','du','st.','st','la','lo','ter', 'o', \"o'\", 'mac', 'fitz'];\r\n        return (words.indexOf(word) >= 0);\r\n    };\r\n\r\n    // single letter, possibly followed by a period\r\n    NameParse.is_initial = function (word) {\r\n        if (!word) { return false; }\r\n        word = this.removeIgnoredChars(word);\r\n        return (word.length === 1);\r\n    };\r\n\r\n    // detect mixed case words like \"McDonald\"\r\n    // returns false if the string is all one case\r\n    NameParse.is_camel_case = function (word) {\r\n        var ucReg = /[A-Z]+/;\r\n        var lcReg = /[a-z]+/;\r\n        return (ucReg.exec(word) && lcReg.exec(word));\r\n    };\r\n\r\n    // ucfirst words split by dashes or periods\r\n    // ucfirst all upper/lower strings, but leave camelcase words alone\r\n    NameParse.fix_case = function (word) {\r\n        // uppercase words split by dashes, like \"Kimura-Fay\"\r\n        word = this.safe_ucfirst(\"-\",word);\r\n        // uppercase words split by periods, like \"J.P.\"\r\n        word = this.safe_ucfirst(\".\",word);\r\n        return word;\r\n    };\r\n\r\n    // helper for this.fix_case\r\n    // uppercase words split by the seperator (ex. dashes or periods)\r\n    NameParse.safe_ucfirst = function (seperator, word) {\r\n        return word.split(seperator).map(function(thisWord){\r\n            if(this.is_camel_case(thisWord)) {\r\n                return thisWord;\r\n            } else {\r\n                return thisWord.substr(0,1).toUpperCase() + thisWord.substr(1).toLowerCase();\r\n            }\r\n        }, this).join(seperator);\r\n    };\r\n\r\n    return NameParse;\r\n})();\r\n\r\nmodule.exports = NameParser;",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/utils/nameParser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "NameParser",
    "memberof": "lib/utils/nameParser.js",
    "static": true,
    "longname": "lib/utils/nameParser.js~NameParser",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/nameParser.js",
    "importStyle": "NameParser",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "lib/utils/secure.js",
    "content": "'use strict';\r\nconst crypto = require('crypto');\r\n\r\nconst SALT_LENGTH = 64; // Length of the salt, in bytes\r\nconst TOKEN_LENGTH = 64;\r\nconst HASH_LENGTH = 64; // Length of the hash, in bytes\r\nconst HASH_ITERATIONS = 1000; // Number of pbkdf2 iterations\r\nconst IV_LENGTH = 16; // For AES, this is always 16\r\n\r\n\r\nfunction generateToken() {\r\n  return new Promise((resolve, reject) => {\r\n    crypto.randomBytes(TOKEN_LENGTH, (err, token) => {\r\n      if(err) reject(err);\r\n      resolve(token);\r\n    })\r\n  });\r\n}\r\n\r\nfunction generateSalt() {\r\n  return new Promise((resolve, reject) => {\r\n    crypto.randomBytes(SALT_LENGTH, (err, salt) => {\r\n      if(err) reject(err);\r\n      resolve(salt);\r\n    })\r\n  });\r\n}\r\n\r\nfunction hash(data, salt) {\r\n  return new Promise((resolve, reject) => {\r\n    crypto.pbkdf2(data, salt, HASH_ITERATIONS, HASH_LENGTH, 'sha1', (err, hash) => {\r\n      if (err) {\r\n        reject(err);\r\n      }\r\n      resolve({\r\n        salt: salt,\r\n        hash: hash\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction saltAndHash(data) {\r\n  return generateSalt().then((salt) => {\r\n    return hash(data, salt);\r\n  });\r\n}\r\n\r\nfunction encrypt(text, ENCRYPTION_KEY) {\r\n  let iv = crypto.randomBytes(IV_LENGTH);\r\n  let cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(ENCRYPTION_KEY), iv);\r\n  let encrypted = cipher.update(text);\r\n\r\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n\r\n  return iv.toString('hex') + ':' + encrypted.toString('hex');\r\n}\r\n\r\nfunction decrypt(text, ENCRYPTION_KEY) {\r\n  let textParts = text.split(':');\r\n  let iv = Buffer.from(textParts.shift(), 'hex');\r\n  let encryptedText = Buffer.from(textParts.join(':'), 'hex');\r\n  let decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(ENCRYPTION_KEY), iv);\r\n  let decrypted = decipher.update(encryptedText);\r\n\r\n  decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n\r\n  return decrypted.toString();\r\n}\r\n\r\nmodule.exports = { \r\n  encrypt,\r\n  decrypt,\r\n  generateSalt, \r\n  generateToken, \r\n  hash, \r\n  saltAndHash };\r\n",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/utils/secure.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "SALT_LENGTH",
    "memberof": "lib/utils/secure.js",
    "static": true,
    "longname": "lib/utils/secure.js~SALT_LENGTH",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "TOKEN_LENGTH",
    "memberof": "lib/utils/secure.js",
    "static": true,
    "longname": "lib/utils/secure.js~TOKEN_LENGTH",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "HASH_LENGTH",
    "memberof": "lib/utils/secure.js",
    "static": true,
    "longname": "lib/utils/secure.js~HASH_LENGTH",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "HASH_ITERATIONS",
    "memberof": "lib/utils/secure.js",
    "static": true,
    "longname": "lib/utils/secure.js~HASH_ITERATIONS",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "IV_LENGTH",
    "memberof": "lib/utils/secure.js",
    "static": true,
    "longname": "lib/utils/secure.js~IV_LENGTH",
    "access": "public",
    "export": false,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "encrypt",
    "memberof": "lib/utils/secure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/secure.js~encrypt",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": "{encrypt}",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "ENCRYPTION_KEY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "decrypt",
    "memberof": "lib/utils/secure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/secure.js~decrypt",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": "{decrypt}",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "ENCRYPTION_KEY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "generateSalt",
    "memberof": "lib/utils/secure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/secure.js~generateSalt",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": "{generateSalt}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "generateToken",
    "memberof": "lib/utils/secure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/secure.js~generateToken",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": "{generateToken}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "hash",
    "memberof": "lib/utils/secure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/secure.js~hash",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": "{hash}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "salt",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "saltAndHash",
    "memberof": "lib/utils/secure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/utils/secure.js~saltAndHash",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/secure.js",
    "importStyle": "{saltAndHash}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "lib/utils/token.js",
    "content": "const JWT = require('jsonwebtoken');\r\nconst Secure = require('./secure');\r\n\r\nclass Token {\r\n    constructor({app_secret}, options){\r\n        if(!app_secret)\r\n            throw new Error('No app secret was sent.');\r\n        this.secret = app_secret;\r\n    }\r\n\r\n    generate(data, jwt_duration) {\r\n        if(!this.secret)\r\n            throw new Error('App Secret not defined');\r\n        \r\n        return JWT.sign({\r\n            data: Secure.encrypt(JSON.stringify({\r\n                user_id: data.user_id\r\n            }), this.secret)\r\n        }, this.secret, {\r\n            expiresIn: jwt_duration\r\n        });\r\n    }\r\n\r\n    validate(token) {\r\n        var me = this;\r\n        if(!this.secret)\r\n            throw new Error('App Secret not defined');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            JWT.verify(token, me.secret, (err, decoded) => {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                let data = decoded.data || false;\r\n                if(data){\r\n                    data = JSON.parse(Secure.decrypt(data, me.secret))\r\n                }\r\n                resolve({data,decoded});\r\n            });\r\n        })\r\n    }\r\n}\r\n\r\nmodule.exports = Token;",
    "static": true,
    "longname": "C:/Santosh/projects/rs/user/lib/utils/token.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "class",
    "name": "Token",
    "memberof": "lib/utils/token.js",
    "static": true,
    "longname": "lib/utils/token.js~Token",
    "access": "public",
    "export": true,
    "importPath": "rs-user/lib/utils/token.js",
    "importStyle": "Token",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 94,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/utils/token.js~Token",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/token.js~Token#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "secret",
    "memberof": "lib/utils/token.js~Token",
    "static": false,
    "longname": "lib/utils/token.js~Token#secret",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "generate",
    "memberof": "lib/utils/token.js~Token",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/token.js~Token#generate",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      },
      {
        "name": "jwt_duration",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "validate",
    "memberof": "lib/utils/token.js~Token",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/utils/token.js~Token#validate",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "﻿# RS User library\r\n\r\nThis is a reusable library to manage users. It has built in authentication, user administation and role based access control.",
    "longname": "C:\\Santosh\\projects\\rs\\user\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"rs-user\",\n  \"version\": \"1.0.0\",\n  \"description\": \"RS User module\",\n  \"main\": \"./lib/index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"Rumsan Associates\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"bluebird\": \"^3.5.1\",\n    \"crypto\": \"^0.0.3\",\n    \"handlebars\": \"^4.0.8\",\n    \"jsonwebtoken\": \"^8.2.0\",\n    \"lodash\": \"^4.17.10\",\n    \"mongoose\": \"^5.2.8\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-node\": \"^1.0.3\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"nodemailer\": \"^4.6.8\"\n  }\n}\n",
    "longname": "C:\\Santosh\\projects\\rs\\user\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]